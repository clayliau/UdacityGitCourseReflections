When would you want to use a remote repository rather than keeping all your work
local?

    I'm not sure yet. But keeping the files online can ensure the file would not corrupt or missing.
    Another benefit is that I can share the filese with others by internet and track the files easily.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    The remote repository is opened, shared and a place for backup. It should remain good status.
    If I change the code with a bug and it automatically sync to remote repository, it may cause
    some one clone the corrupt code base and make the project go wrong.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    - Fork: github function. make a clone on the cloud to your account. like a backup place.
    - Clone: copy a clone from cloud or local directory to a new location. clone is for modifying and working.
    - Branch: from the current working directory, make a branch for modifying the files in side. but work in the original directory.

What is the benefit of having a copy of the last known state of the remote
stored locally?

    can easily restore the last known state data or diff the difference what's wrong.

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    Without Git and Github, I may use share folder, cloud space or email to exchange the data. However, there's no version control mechanism with these methods. I think using Git and Github is a better way for collaborating a project. 

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    If I want to collabrate with people to do a project, I may use the separate branch. 
